# Stateful set
# Spread constraints to evenly distribute pods across AZs based on node's zone label
# Affinity to 'not' deploy to default nodepool
# DownwardApi to get node info
# VolumeClaimTemplates to dynamically provision a disk volume per pod
# Finally exposing statefulset as a loadbalancer service (not headless)

# Stateful set
# Spread constraints to evenly distribute pods across AZs based on node's zone label
# Affinity to 'not' deploy to default nodepool
# DownwardApi to get node info
# VolumeClaimTemplates to dynamically provision a disk volume per pod
# Finally exposing statefulset as a loadbalancer service (not headless)

# Access by
# curl http://stateful-web-svc.live-demo:80  (or eq. namespace)
# By pod ordinal,
# curl stateful-web-0.stateful-web-svc.live-demo.svc.cluster.local

# Busybox
# nslookup stateful-web-svc.live-demo.svc.cluster.local

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: tenant1-tester
  namespace: loadtest
  labels:
    app: tenant1-tester
    purpose: loadtest
spec:
  serviceName: tenant1-tester
  selector:
    matchLabels:
      app: tenant1-tester
      purpose: loadtest
  replicas: 50
  template:
    metadata:
      labels:
        app: tenant1-tester
        purpose: loadtest
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: tenant1-tester
          image: ghcr.io/suren-m/hey:bullseye-slim
          command: ["/bin/bash", "-c", "--"]
          args: ["while true; do hey http://stateful-web-svc.tenant1; done;"]
          env: # Downward API to collect deployed Nodename. Access by $NODE_NAME
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          resources:
            requests:
              memory: "32Mi"
              cpu: "25m"
            limits:
              memory: "64Mi"
              cpu: "50m"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: workloads
                    operator: In
                    values:
                      - common
      # topologySpreadConstraints:
      #   - maxSkew: 1
      #     topologyKey: topology.kubernetes.io/zone
      #     whenUnsatisfiable: DoNotSchedule
      #     labelSelector:
      #       matchLabels:
      #         app: tenant1-tester
